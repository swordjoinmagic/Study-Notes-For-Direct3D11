//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 mvp;                       // Offset:    0, size:   64
    float4x4 model;                     // Offset:   64, size:   64
    float4x4 invModel;                  // Offset:  128, size:   64
    Light   light;                      // Offset:  192, size:   56
    float3  viewPos;                    // Offset:  256, size:   12
    float3  diffuseColor;               // Offset:  272, size:   12
    float3  specularColor;              // Offset:  288, size:   12
}

//
// 2 local object(s)
//
Texture2D MainTex;
SamplerState sampleState1
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 mvp;                      // Offset:    0 Size:    64
                //   float4x4 model;                    // Offset:   64 Size:    64
                //   float4x4 invModel;                 // Offset:  128 Size:    64
                //   
                //   struct Light
                //   {
                //       
                //       float3 pos;                    // Offset:  192
                //       float Kc;                      // Offset:  204
                //       float3 dir;                    // Offset:  208
                //       float Ki;                      // Offset:  220
                //       float3 color;                  // Offset:  224
                //       float Kq;                      // Offset:  236
                //       float Phi;                     // Offset:  240
                //       float Theta;                   // Offset:  244
                //
                //   } light;                           // Offset:  192 Size:    56 [unused]
                //   float3 viewPos;                    // Offset:  256 Size:    12 [unused]
                //   float3 diffuseColor;               // Offset:  272 Size:    12 [unused]
                //   float3 specularColor;              // Offset:  288 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[11], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_temps 4
                
                #line 40 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample7 DepthStencil\diffuseShader.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // o<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // o<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // o<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // o<3:NaN:Inf>
                dp4 r2.x, r0.xyzw, cb0[4].xyzw  // o<4:NaN:Inf>
                dp4 r2.y, r0.xyzw, cb0[5].xyzw  // o<5:NaN:Inf>
                dp4 r2.z, r0.xyzw, cb0[6].xyzw  // o<6:NaN:Inf>
                mov r0.xyz, v1.xyzx
                mov r0.w, l(1.000000)
                dp4 r3.x, r0.xyzw, cb0[8].xyzw  // o<7:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[9].xyzw  // o<8:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[10].xyzw  // o<9:NaN:Inf>
                mov r0.xy, v2.xyxx  // o<10,11>
                mov o0.xyzw, r1.xyzw  // vert<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r2.xyzx  // vert<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r3.xyzx  // vert<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r0.xyxx  // vert<10,11>
                ret 
                // Approximately 20 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 mvp;                      // Offset:    0 Size:    64 [unused]
                //   float4x4 model;                    // Offset:   64 Size:    64 [unused]
                //   float4x4 invModel;                 // Offset:  128 Size:    64 [unused]
                //   
                //   struct Light
                //   {
                //       
                //       float3 pos;                    // Offset:  192
                //       float Kc;                      // Offset:  204
                //       float3 dir;                    // Offset:  208
                //       float Ki;                      // Offset:  220
                //       float3 color;                  // Offset:  224
                //       float Kq;                      // Offset:  236
                //       float Phi;                     // Offset:  240
                //       float Theta;                   // Offset:  244
                //
                //   } light;                           // Offset:  192 Size:    56
                //   float3 viewPos;                    // Offset:  256 Size:    12
                //   float3 diffuseColor;               // Offset:  272 Size:    12
                //   float3 specularColor;              // Offset:  288 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // sampleState1                      sampler      NA          NA    0        1
                // MainTex                           texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[19], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_output o0.xyzw
                dcl_temps 4
                
                #line 48 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample7 DepthStencil\diffuseShader.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // worldNormal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, cb0[13].xyzx, cb0[13].xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, cb0[13].xyzx  // lightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r0.xyzx, r1.xyzx
                mul r0.w, r0.w, l(0.500000)
                add r0.w, r0.w, l(0.500000)  // NdotL<0:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r2.xyzw, v3.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                mul r3.xyz, r0.wwww, cb0[17].xyzx
                mul r3.xyz, r3.xyzx, cb0[14].xyzx
                mul r2.xyz, r2.xyzx, r3.xyzx  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r3.xyz, -v1.xyzx
                add r3.xyz, r3.xyzx, cb0[16].xyzx
                dp3 r0.w, r3.xyzx, r3.xyzx
                rsq r0.w, r0.w
                mul r3.xyz, r0.wwww, r3.xyzx  // worldViewDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r1.xyz, r1.xyzx, r3.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, r1.xyzx  // halfDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                
                #line 60
                dp3 r0.x, r0.xyzx, r1.xyzx
                max r0.x, r0.x, l(0.000000)
                log r0.x, r0.x
                mul r0.x, r0.x, l(256.000000)
                exp r0.x, r0.x  // specu<0:Inf:[0f,1.#INFf]>
                mul r0.xyz, r0.xxxx, cb0[18].xyzx
                mul r0.xyz, r0.xyzx, cb0[14].xyzx  // specular<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mul r1.xyz, r2.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r2.xyzx
                add o0.xyz, r1.xyzx, r0.xyzx  // frag<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, r2.w  // frag<3:Inf>
                ret 
                // Approximately 34 instruction slots used
                            
            };
        }

    }

}

