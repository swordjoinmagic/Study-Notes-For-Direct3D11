//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 mvp;                       // Offset:    0, size:   64
    float4x4 model;                     // Offset:   64, size:   64
    float4x4 projectorVP;               // Offset:  128, size:   64
}

//
// 3 local object(s)
//
Texture2D projTex;
Texture2D MainTex;
SamplerState state
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    BorderColor = float4(1, 1, 1, 1);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 mvp;                      // Offset:    0 Size:    64
                //   float4x4 model;                    // Offset:   64 Size:    64
                //   float4x4 projectorVP;              // Offset:  128 Size:    64
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // TEXCOORD                 1   xyzw        2     NONE  float   xyzw
                // POSITION                 0   xyz         3     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_output o2.xyzw
                dcl_output o3.xyz
                dcl_temps 5
                
                #line 36 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample13 Projector\simpleProjector.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // o<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // o<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // o<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // o<3:NaN:Inf>
                mov r2.xy, v1.xyxx  // o<4,5>
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // o<10:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // o<11:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // o<12:NaN:Inf>
                mov r0.x, r3.x  // o<10:NaN:Inf>
                mov r0.y, r3.y  // o<11:NaN:Inf>
                mov r0.z, r3.z  // o<12:NaN:Inf>
                mov r3.w, l(1.000000)
                dp4 r4.x, r3.xyzw, cb0[8].xyzw  // o<6:NaN:Inf>
                dp4 r4.y, r3.xyzw, cb0[9].xyzw  // o<7:NaN:Inf>
                dp4 r4.z, r3.xyzw, cb0[10].xyzw  // o<8:NaN:Inf>
                dp4 r4.w, r3.xyzw, cb0[11].xyzw  // o<9:NaN:Inf>
                mov o0.xyzw, r1.xyzw  // vert<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyzw, r4.xyzw  // vert<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xyz, r0.xyzx  // vert<10:NaN:Inf,11:NaN:Inf,12:NaN:Inf>
                mov o1.xy, r2.xyxx  // vert<4,5>
                ret 
                // Approximately 23 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // state                             sampler      NA          NA    0        1
                // projTex                           texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float       
                // TEXCOORD                 1   xyzw        2     NONE  float   xy w
                // POSITION                 0   xyz         3     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v2.xyw
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 49 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample13 Projector\simpleProjector.fx"
                div r0.xy, v2.xyxx, v2.wwww  // projUV<0:NaN:Inf,1:NaN:Inf>
                mul r0.xy, r0.xyxx, l(0.500000, -0.500000, 0.000000, 0.000000)
                add r0.xy, r0.xyxx, l(0.500000, 0.500000, 0.000000, 0.000000)  // uv<0:NaN:Inf,1:NaN:Inf>
                
                #line 54
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, r0.xyxx, t0.xyzw, s0  // projTexColor<0:Inf,1:Inf,2:Inf,3:Inf>
                
                #line 59
                mov o0.xyzw, r0.xyzw  // pixel<0:Inf,1:Inf,2:Inf,3:Inf>
                ret 
                // Approximately 6 instruction slots used
                            
            };
        }

    }

}

