//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 view;                      // Offset:    0, size:   64
    float4x4 proj;                      // Offset:   64, size:   64
}

//
// 3 local object(s)
//
StructuredBuffer instancedDatas;
Texture2D mainTex;
SamplerState state1
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 view;                     // Offset:    0 Size:    64
                //   float4x4 proj;                     // Offset:   64 Size:    64
                //
                // }
                //
                // Resource bind info for instancedDatas
                // {
                //
                //   struct InstancedData
                //   {
                //       
                //       float4x4 model;                // Offset:    0
                //       float4 color;                  // Offset:   64
                //
                //   } $Element;                        // Offset:    0 Size:    80
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // instancedDatas                    texture  struct         r/o    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // SV_InstanceID            0   x           2   INSTID   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_resource_structured t0, 80 
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_input_sgv v2.x, instance_id
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xy
                dcl_temps 12
                
                #line 32 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample10 Instancing\frustum.fx"
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r0.x, v2.x, l(0), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r0.y, v2.x, l(16), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r0.z, v2.x, l(32), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r0.w, v2.x, l(48), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.x, v2.x, l(4), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.y, v2.x, l(20), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.z, v2.x, l(36), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r1.w, v2.x, l(52), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.x, v2.x, l(8), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.y, v2.x, l(24), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.z, v2.x, l(40), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r2.w, v2.x, l(56), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.x, v2.x, l(12), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.y, v2.x, l(28), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.z, v2.x, l(44), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r3.w, v2.x, l(60), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r4.x, v2.x, l(64), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r4.y, v2.x, l(68), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r4.z, v2.x, l(72), t0.xxxx  // instancedDatas<0>
                ld_structured_indexable(structured_buffer, stride=80)(mixed,mixed,mixed,mixed) r4.w, v2.x, l(76), t0.xxxx  // instancedDatas<0>
                mov r4.x, r4.x  // data<16>
                mov r4.y, r4.y  // data<17>
                mov r4.z, r4.z  // data<18>
                mov r4.w, r4.w  // data<19>
                mul r5.xyzw, cb0[0].xyzw, cb0[4].xxxx
                mul r6.xyzw, cb0[1].xyzw, cb0[4].yyyy
                add r5.xyzw, r5.xyzw, r6.xyzw
                mul r6.xyzw, cb0[2].xyzw, cb0[4].zzzz
                add r5.xyzw, r5.xyzw, r6.xyzw
                mul r6.xyzw, cb0[3].xyzw, cb0[4].wwww
                add r5.xyzw, r5.xyzw, r6.xyzw
                mul r6.xyzw, cb0[0].xyzw, cb0[5].xxxx
                mul r7.xyzw, cb0[1].xyzw, cb0[5].yyyy
                add r6.xyzw, r6.xyzw, r7.xyzw
                mul r7.xyzw, cb0[2].xyzw, cb0[5].zzzz
                add r6.xyzw, r6.xyzw, r7.xyzw
                mul r7.xyzw, cb0[3].xyzw, cb0[5].wwww
                add r6.xyzw, r6.xyzw, r7.xyzw
                mul r7.xyzw, cb0[0].xyzw, cb0[6].xxxx
                mul r8.xyzw, cb0[1].xyzw, cb0[6].yyyy
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r8.xyzw, cb0[2].xyzw, cb0[6].zzzz
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r8.xyzw, cb0[3].xyzw, cb0[6].wwww
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r8.xyzw, cb0[0].xyzw, cb0[7].xxxx
                mul r9.xyzw, cb0[1].xyzw, cb0[7].yyyy
                add r8.xyzw, r8.xyzw, r9.xyzw
                mul r9.xyzw, cb0[2].xyzw, cb0[7].zzzz
                add r8.xyzw, r8.xyzw, r9.xyzw
                mul r9.xyzw, cb0[3].xyzw, cb0[7].wwww
                add r8.xyzw, r8.xyzw, r9.xyzw
                dp4 r9.x, r0.xyzw, r5.xyzw  // mvp<0:NaN:Inf>
                dp4 r10.x, r0.xyzw, r6.xyzw  // mvp<1:NaN:Inf>
                dp4 r11.x, r0.xyzw, r7.xyzw  // mvp<2:NaN:Inf>
                dp4 r0.x, r0.xyzw, r8.xyzw  // mvp<3:NaN:Inf>
                dp4 r9.y, r1.xyzw, r5.xyzw  // mvp<4:NaN:Inf>
                dp4 r10.y, r1.xyzw, r6.xyzw  // mvp<5:NaN:Inf>
                dp4 r11.y, r1.xyzw, r7.xyzw  // mvp<6:NaN:Inf>
                dp4 r0.y, r1.xyzw, r8.xyzw  // mvp<7:NaN:Inf>
                dp4 r9.z, r2.xyzw, r5.xyzw  // mvp<8:NaN:Inf>
                dp4 r10.z, r2.xyzw, r6.xyzw  // mvp<9:NaN:Inf>
                dp4 r11.z, r2.xyzw, r7.xyzw  // mvp<10:NaN:Inf>
                dp4 r0.z, r2.xyzw, r8.xyzw  // mvp<11:NaN:Inf>
                dp4 r9.w, r3.xyzw, r5.xyzw  // mvp<12:NaN:Inf>
                dp4 r10.w, r3.xyzw, r6.xyzw  // mvp<13:NaN:Inf>
                dp4 r11.w, r3.xyzw, r7.xyzw  // mvp<14:NaN:Inf>
                dp4 r0.w, r3.xyzw, r8.xyzw  // mvp<15:NaN:Inf>
                mov r1.xyz, v0.xyzx
                mov r1.w, l(1.000000)
                dp4 r2.x, r1.xyzw, r9.xyzw  // o<0:NaN:Inf>
                dp4 r2.y, r1.xyzw, r10.xyzw  // o<1:NaN:Inf>
                dp4 r2.z, r1.xyzw, r11.xyzw  // o<2:NaN:Inf>
                dp4 r2.w, r1.xyzw, r0.xyzw  // o<3:NaN:Inf>
                mov r0.xy, v1.xyxx  // o<8,9>
                mov r4.xyzw, r4.xyzw  // o<4,5,6,7>
                mov o0.xyzw, r2.xyzw  // vert<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyzw, r4.xyzw  // vert<4,5,6,7>
                mov o2.xy, r0.xyxx  // vert<8,9>
                ret 
                // Approximately 80 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // state1                            sampler      NA          NA    0        1
                // mainTex                           texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps constant v1.xyzw
                dcl_input_ps linear v2.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 43 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample10 Instancing\frustum.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
                mul o0.xyzw, r0.xyzw, v1.xyzw  // pixel<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 3 instruction slots used
                            
            };
        }

    }

}

