//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 view;                      // Offset:    0, size:   64
    float4x4 proj;                      // Offset:   64, size:   64
    float3  viewPos;                    // Offset:  128, size:   12
    Light   light;                      // Offset:  144, size:   56
}

//
// 2 local object(s)
//
StructuredBuffer gInstanceData;
StructuredBuffer gMaterialData;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 view;                     // Offset:    0 Size:    64
                //   float4x4 proj;                     // Offset:   64 Size:    64
                //   float3 viewPos;                    // Offset:  128 Size:    12 [unused]
                //   
                //   struct Light
                //   {
                //       
                //       float3 pos;                    // Offset:  144
                //       float Kc;                      // Offset:  156
                //       float3 dir;                    // Offset:  160
                //       float Ki;                      // Offset:  172
                //       float3 color;                  // Offset:  176
                //       float Kq;                      // Offset:  188
                //       float Phi;                     // Offset:  192
                //       float Theta;                   // Offset:  196
                //
                //   } light;                           // Offset:  144 Size:    56 [unused]
                //
                // }
                //
                // Resource bind info for gInstanceData
                // {
                //
                //   struct InstanceData
                //   {
                //       
                //       float4x4 model;                // Offset:    0
                //       float4x4 invModel;             // Offset:   64
                //       uint materialIndex;            // Offset:  128
                //
                //   } $Element;                        // Offset:    0 Size:   132
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // gInstanceData                     texture  struct         r/o    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // SV_InstanceID            0   x           2   INSTID   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // POSITION                 0   xyz         2     NONE  float   xyz 
                // MATINDEX                 0   x           3     NONE   uint   x   
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_resource_structured t0, 132 
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input_sgv v2.x, instance_id
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.x
                dcl_temps 15
                
                #line 37 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample10 Instancing\instancingShader.fx"
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r0.x, v2.x, l(0), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r0.y, v2.x, l(16), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r0.z, v2.x, l(32), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r0.w, v2.x, l(48), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r1.x, v2.x, l(4), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r1.y, v2.x, l(20), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r1.z, v2.x, l(36), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r1.w, v2.x, l(52), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r2.x, v2.x, l(8), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r2.y, v2.x, l(24), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r2.z, v2.x, l(40), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r2.w, v2.x, l(56), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r3.x, v2.x, l(12), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r3.y, v2.x, l(28), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r3.w, v2.x, l(44), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r3.z, v2.x, l(60), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r4.x, v2.x, l(64), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r5.x, v2.x, l(80), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r6.x, v2.x, l(96), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r4.y, v2.x, l(68), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r5.y, v2.x, l(84), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r6.y, v2.x, l(100), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r4.z, v2.x, l(72), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r5.z, v2.x, l(88), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r6.z, v2.x, l(104), t0.xxxx  // gInstanceData<0>
                ld_structured_indexable(structured_buffer, stride=132)(mixed,mixed,mixed,mixed) r4.w, v2.x, l(128), t0.xxxx  // gInstanceData<0>
                mov r4.w, r4.w  // instData<32>
                
                #line 40
                mul r7.xyzw, cb0[0].xyzw, cb0[4].xxxx
                mul r8.xyzw, cb0[1].xyzw, cb0[4].yyyy
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r8.xyzw, cb0[2].xyzw, cb0[4].zzzz
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r8.xyzw, cb0[3].xyzw, cb0[4].wwww
                add r7.xyzw, r7.xyzw, r8.xyzw
                mul r8.xyzw, cb0[0].xyzw, cb0[5].xxxx
                mul r9.xyzw, cb0[1].xyzw, cb0[5].yyyy
                add r8.xyzw, r8.xyzw, r9.xyzw
                mul r9.xyzw, cb0[2].xyzw, cb0[5].zzzz
                add r8.xyzw, r8.xyzw, r9.xyzw
                mul r9.xyzw, cb0[3].xyzw, cb0[5].wwww
                add r8.xyzw, r8.xyzw, r9.xyzw
                mul r9.xyzw, cb0[0].xyzw, cb0[6].xxxx
                mul r10.xyzw, cb0[1].xyzw, cb0[6].yyyy
                add r9.xyzw, r9.xyzw, r10.xyzw
                mul r10.xyzw, cb0[2].xyzw, cb0[6].zzzz
                add r9.xyzw, r9.xyzw, r10.xyzw
                mul r10.xyzw, cb0[3].xyzw, cb0[6].wwww
                add r9.xyzw, r9.xyzw, r10.xyzw
                mul r10.xyzw, cb0[0].xyzw, cb0[7].xxxx
                mul r11.xyzw, cb0[1].xyzw, cb0[7].yyyy
                add r10.xyzw, r10.xyzw, r11.xyzw
                mul r11.xyzw, cb0[2].xyzw, cb0[7].zzzz
                add r10.xyzw, r10.xyzw, r11.xyzw
                mul r11.xyzw, cb0[3].xyzw, cb0[7].wwww
                add r10.xyzw, r10.xyzw, r11.xyzw
                dp4 r11.x, r0.xyzw, r7.xyzw  // mvp<0:NaN:Inf>
                dp4 r12.x, r0.xyzw, r8.xyzw  // mvp<1:NaN:Inf>
                dp4 r13.x, r0.xyzw, r9.xyzw  // mvp<2:NaN:Inf>
                dp4 r14.x, r0.xyzw, r10.xyzw  // mvp<3:NaN:Inf>
                dp4 r11.y, r1.xyzw, r7.xyzw  // mvp<4:NaN:Inf>
                dp4 r12.y, r1.xyzw, r8.xyzw  // mvp<5:NaN:Inf>
                dp4 r13.y, r1.xyzw, r9.xyzw  // mvp<6:NaN:Inf>
                dp4 r14.y, r1.xyzw, r10.xyzw  // mvp<7:NaN:Inf>
                dp4 r11.z, r2.xyzw, r7.xyzw  // mvp<8:NaN:Inf>
                dp4 r12.z, r2.xyzw, r8.xyzw  // mvp<9:NaN:Inf>
                dp4 r13.z, r2.xyzw, r9.xyzw  // mvp<10:NaN:Inf>
                dp4 r14.z, r2.xyzw, r10.xyzw  // mvp<11:NaN:Inf>
                dp4 r11.w, r3.xywz, r7.xyzw  // mvp<12:NaN:Inf>
                dp4 r12.w, r3.xywz, r8.xyzw  // mvp<13:NaN:Inf>
                dp4 r13.w, r3.xywz, r9.xyzw  // mvp<14:NaN:Inf>
                dp4 r14.w, r3.xywz, r10.xyzw  // mvp<15:NaN:Inf>
                mov r7.xyz, v0.xyzx
                mov r7.w, l(1.000000)
                dp4 r8.x, r7.xyzw, r11.xyzw  // o<0:NaN:Inf>
                dp4 r8.y, r7.xyzw, r12.xyzw  // o<1:NaN:Inf>
                dp4 r8.z, r7.xyzw, r13.xyzw  // o<2:NaN:Inf>
                dp4 r8.w, r7.xyzw, r14.xyzw  // o<3:NaN:Inf>
                dp3 r4.x, v1.xyzx, r4.xyzx
                dp3 r4.y, v1.xyzx, r5.xyzx
                dp3 r4.z, v1.xyzx, r6.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // o<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov r5.x, r0.x
                mov r5.y, r1.x
                mov r5.z, r2.x
                mov r5.w, r3.x
                dp4 r5.x, r7.xyzw, r5.xyzw  // o<7:NaN:Inf>
                mov r6.x, r0.y
                mov r6.y, r1.y
                mov r6.z, r2.y
                mov r6.w, r3.y
                dp4 r5.y, r7.xyzw, r6.xyzw  // o<8:NaN:Inf>
                mov r3.x, r0.z
                mov r3.y, r1.z
                mov r3.z, r2.z
                dp4 r5.z, r7.xyzw, r3.xyzw  // o<9:NaN:Inf>
                mov r4.w, r4.w  // o<10>
                mov o0.xyzw, r8.xyzw  // vert<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o1.xyz, r4.xyzx  // vert<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r5.xyzx  // vert<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.x, r4.w  // vert<10>
                ret 
                // Approximately 103 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 view;                     // Offset:    0 Size:    64 [unused]
                //   float4x4 proj;                     // Offset:   64 Size:    64 [unused]
                //   float3 viewPos;                    // Offset:  128 Size:    12
                //   
                //   struct Light
                //   {
                //       
                //       float3 pos;                    // Offset:  144
                //       float Kc;                      // Offset:  156
                //       float3 dir;                    // Offset:  160
                //       float Ki;                      // Offset:  172
                //       float3 color;                  // Offset:  176
                //       float Kq;                      // Offset:  188
                //       float Phi;                     // Offset:  192
                //       float Theta;                   // Offset:  196
                //
                //   } light;                           // Offset:  144 Size:    56
                //
                // }
                //
                // Resource bind info for gMaterialData
                // {
                //
                //   struct MaerialData
                //   {
                //       
                //       float4 diffuseColor;           // Offset:    0
                //       float4 specularColor;          // Offset:   16
                //
                //   } $Element;                        // Offset:    0 Size:    32
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // gMaterialData                     texture  struct         r/o    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // POSITION                 0   xyz         2     NONE  float   xyz 
                // MATINDEX                 0   x           3     NONE   uint   x   
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[12], immediateIndexed
                dcl_resource_structured t0, 32 
                dcl_input_ps linear v1.xyz
                dcl_input_ps linear v2.xyz
                dcl_input_ps constant v3.x
                dcl_output o0.xyzw
                dcl_temps 6
                
                #line 51 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample10 Instancing\instancingShader.fx"
                ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r0.x, v3.x, l(0), t0.xxxx  // gMaterialData<0>
                ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r0.y, v3.x, l(4), t0.xxxx  // gMaterialData<0>
                ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r0.z, v3.x, l(8), t0.xxxx  // gMaterialData<0>
                ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r1.x, v3.x, l(16), t0.xxxx  // gMaterialData<0>
                ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r1.y, v3.x, l(20), t0.xxxx  // gMaterialData<0>
                ld_structured_indexable(structured_buffer, stride=32)(mixed,mixed,mixed,mixed) r1.z, v3.x, l(24), t0.xxxx  // gMaterialData<0>
                mov r0.x, r0.x  // mData<0>
                mov r0.y, r0.y  // mData<1>
                mov r0.z, r0.z  // mData<2>
                mov r1.x, r1.x  // mData<4>
                mov r1.y, r1.y  // mData<5>
                mov r1.z, r1.z  // mData<6>
                mov r0.xyz, r0.xyzx  // diffuseColor<0,1,2>
                mov r1.xyz, r1.xyzx  // specuColor<0,1,2>
                mul r2.xyz, r0.xyzx, l(0.100000, 0.100000, 0.100000, 0.000000)  // ambient<0:[-3.40282e+037f,3.40282e+037f],1:[-3.40282e+037f,3.40282e+037f],2:[-3.40282e+037f,3.40282e+037f]>
                dp3 r0.w, v1.xyzx, v1.xyzx
                rsq r0.w, r0.w
                mul r3.xyz, r0.wwww, v1.xyzx  // worldNormal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, cb0[10].xyzx, cb0[10].xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, cb0[10].xyzx  // worldLightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r3.xyzx, r4.xyzx  // NDotL<0:NaN:Inf>
                mul r0.w, r0.w, l(0.500000)
                add r0.w, r0.w, l(0.500000)  // NDotL<0:NaN:Inf>
                
                #line 62
                mul r0.xyz, r0.xyzx, r0.wwww
                mul r0.xyz, r0.xyzx, cb0[11].xyzx  // diff<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov r5.xyz, -v2.xyzx
                add r5.xyz, r5.xyzx, cb0[8].xyzx
                dp3 r0.w, r5.xyzx, r5.xyzx
                rsq r0.w, r0.w
                mul r5.xyz, r0.wwww, r5.xyzx  // worldViewDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r4.xyz, r4.xyzx, r5.xyzx
                dp3 r0.w, r4.xyzx, r4.xyzx
                rsq r0.w, r0.w
                mul r4.xyz, r0.wwww, r4.xyzx  // halfDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, r4.xyzx, r3.xyzx  // HDotN<0:NaN:Inf>
                max r0.w, r0.w, l(0.000000)  // HDotN<0:Inf:[-0f,1.#INFf]>
                mul r1.xyz, r1.xyzx, r0.wwww  // specu<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                add r0.xyz, r0.xyzx, r2.xyzx
                add o0.xyz, r1.xyzx, r0.xyzx  // pixel<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, l(1.000000)  // pixel<3: 1f>
                ret 
                // Approximately 42 instruction slots used
                            
            };
        }

    }

}

