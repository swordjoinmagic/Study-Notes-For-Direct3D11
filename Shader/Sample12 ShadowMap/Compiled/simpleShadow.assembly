//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject : register(b0)
{
    float4x4 mvp;                       // Offset:    0, size:   64
    float4x4 transInvModel;             // Offset:   64, size:   64
    float4x4 model;                     // Offset:  128, size:   64
    float4x4 World2LightMatrix;         // Offset:  192, size:   64
    Light   light;                      // Offset:  256, size:   56
    float3  viewPos;                    // Offset:  320, size:   12
    float4  diffuseColor;               // Offset:  336, size:   16
    float4  specularColor;              // Offset:  352, size:   16
    float4  shadowColor;                // Offset:  368, size:   16
    float   bias;                       // Offset:  384, size:    4
}

//
// 3 local object(s)
//
Texture2D mainTex;
Texture2D shadowMap;
SamplerState state
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(BORDER /* 4 */);
    AddressV = uint(BORDER /* 4 */);
    BorderColor = float4(1, 1, 1, 1);
};

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 mvp;                      // Offset:    0 Size:    64
                //   float4x4 transInvModel;            // Offset:   64 Size:    64
                //   float4x4 model;                    // Offset:  128 Size:    64
                //   float4x4 World2LightMatrix;        // Offset:  192 Size:    64
                //   
                //   struct Light
                //   {
                //       
                //       float3 pos;                    // Offset:  256
                //       float Kc;                      // Offset:  268
                //       float3 dir;                    // Offset:  272
                //       float Ki;                      // Offset:  284
                //       float3 color;                  // Offset:  288
                //       float Kq;                      // Offset:  300
                //       float Phi;                     // Offset:  304
                //       float Theta;                   // Offset:  308
                //
                //   } light;                           // Offset:  256 Size:    56 [unused]
                //   float3 viewPos;                    // Offset:  320 Size:    12 [unused]
                //   float4 diffuseColor;               // Offset:  336 Size:    16 [unused]
                //   float4 specularColor;              // Offset:  352 Size:    16 [unused]
                //   float4 shadowColor;                // Offset:  368 Size:    16 [unused]
                //   float bias;                        // Offset:  384 Size:     4 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // NORMAL                   0   xyz         1     NONE  float   xyz 
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // POSITION                 0   xyz         1     NONE  float   xyz 
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[16], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyz
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyz
                dcl_output o2.xyz
                dcl_output o3.xy
                dcl_output o4.xyzw
                dcl_temps 6
                
                #line 56 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample12 ShadowMap\simpleShadow.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // o<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // o<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // o<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // o<3:NaN:Inf>
                dp4 r2.x, r0.xyzw, cb0[8].xyzw  // o<4:NaN:Inf>
                dp4 r2.y, r0.xyzw, cb0[9].xyzw  // o<5:NaN:Inf>
                dp4 r2.z, r0.xyzw, cb0[10].xyzw  // o<6:NaN:Inf>
                mov r0.x, r2.x  // o<4:NaN:Inf>
                mov r0.y, r2.y  // o<5:NaN:Inf>
                mov r0.z, r2.z  // o<6:NaN:Inf>
                mov r3.w, l(0)
                mov r3.xyz, v1.xyzx
                dp4 r4.x, r3.xyzw, cb0[4].xyzw  // o<7:NaN:Inf>
                dp4 r4.y, r3.xyzw, cb0[5].xyzw  // o<8:NaN:Inf>
                dp4 r4.z, r3.xyzw, cb0[6].xyzw  // o<9:NaN:Inf>
                mov r3.xy, v2.xyxx  // o<10,11>
                mov r2.w, l(1.000000)
                dp4 r5.x, r2.xyzw, cb0[12].xyzw  // o<12:NaN:Inf>
                dp4 r5.y, r2.xyzw, cb0[13].xyzw  // o<13:NaN:Inf>
                dp4 r5.z, r2.xyzw, cb0[14].xyzw  // o<14:NaN:Inf>
                dp4 r5.w, r2.xyzw, cb0[15].xyzw  // o<15:NaN:Inf>
                mov o0.xyzw, r1.xyzw  // vert<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o4.xyzw, r5.xyzw  // vert<12:NaN:Inf,13:NaN:Inf,14:NaN:Inf,15:NaN:Inf>
                mov o1.xyz, r0.xyzx  // vert<4:NaN:Inf,5:NaN:Inf,6:NaN:Inf>
                mov o2.xyz, r4.xyzx  // vert<7:NaN:Inf,8:NaN:Inf,9:NaN:Inf>
                mov o3.xy, r3.xyxx  // vert<10,11>
                ret 
                // Approximately 29 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 mvp;                      // Offset:    0 Size:    64 [unused]
                //   float4x4 transInvModel;            // Offset:   64 Size:    64 [unused]
                //   float4x4 model;                    // Offset:  128 Size:    64 [unused]
                //   float4x4 World2LightMatrix;        // Offset:  192 Size:    64 [unused]
                //   
                //   struct Light
                //   {
                //       
                //       float3 pos;                    // Offset:  256
                //       float Kc;                      // Offset:  268
                //       float3 dir;                    // Offset:  272
                //       float Ki;                      // Offset:  284
                //       float3 color;                  // Offset:  288
                //       float Kq;                      // Offset:  300
                //       float Phi;                     // Offset:  304
                //       float Theta;                   // Offset:  308
                //
                //   } light;                           // Offset:  256 Size:    56
                //   float3 viewPos;                    // Offset:  320 Size:    12 [unused]
                //   float4 diffuseColor;               // Offset:  336 Size:    16
                //   float4 specularColor;              // Offset:  352 Size:    16 [unused]
                //   float4 shadowColor;                // Offset:  368 Size:    16
                //   float bias;                        // Offset:  384 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // state                             sampler      NA          NA    0        1
                // mainTex                           texture  float4          2d    0        1
                // shadowMap                         texture  float4          2d    1        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // POSITION                 0   xyz         1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float   xyz 
                // TEXCOORD                 0   xy          3     NONE  float   xy  
                // TEXCOORD                 1   xyzw        4     NONE  float   xyzw
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[25], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_resource_texture2d (float,float,float,float) t1
                dcl_input_ps linear v2.xyz
                dcl_input_ps linear v3.xy
                dcl_input_ps linear v4.xyzw
                dcl_output o0.xyzw
                dcl_temps 7
                
                #line 67 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample12 ShadowMap\simpleShadow.fx"
                dp3 r0.x, v2.xyzx, v2.xyzx
                rsq r0.x, r0.x
                mul r0.xyz, r0.xxxx, v2.xyzx  // worldNormal<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.w, cb0[17].xyzx, cb0[17].xyzx
                rsq r0.w, r0.w
                mul r1.xyz, r0.wwww, cb0[17].xyzx  // worldLightDir<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                dp3 r0.x, r0.xyzx, r1.xyzx
                mul r0.x, r0.x, l(0.500000)
                add r0.x, r0.x, l(0.500000)  // NDotL<0:NaN:Inf>
                sample_indexable(texture2d)(float,float,float,float) r1.xyzw, v3.xyxx, t0.xyzw, s0
                mul r0.xyzw, r0.xxxx, r1.xyzw
                mul r0.xyzw, r0.xyzw, cb0[21].xyzw  // diffuse<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 82
                mul r1.xyzw, r0.xyzw, l(0.100000, 0.100000, 0.100000, 0.100000)  // ambient<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 86
                mov r2.xyzw, v4.xyzw  // shadowUV<0,1,2,3>
                div r2.xyz, r2.zxyz, r2.wwww  // shadowUV<2:NaN:Inf,0:NaN:Inf,1:NaN:Inf>
                
                #line 92
                mul r2.yz, r2.yyzy, l(0.000000, 0.500000, -0.500000, 0.000000)
                add r2.yz, r2.yyzy, l(0.000000, 0.500000, 0.500000, 0.000000)  // uv<0:NaN:Inf,1:NaN:Inf>
                
                #line 96
                add r0.xyzw, r0.xyzw, r1.xyzw  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                
                #line 102
                resinfo_indexable(texture2d)(float,float,float,float)_uint r1.x, l(0), t1.xyzw
                mov r1.x, r1.x  // width<0>
                
                #line 105
                utof r1.x, r1.x
                div r1.z, l(1.000000), r1.x  // dx<0:Inf:[2.32831e-010f,1.#INFf]>
                mov r2.w, r1.z  // dx<0:Inf:[2.32831e-010f,1.#INFf]>
                
                #line 110
                mov r3.y, -r2.w  // offsets<3:Inf:[-1.#INFf,-2.32831e-010f]>
                mov r3.x, l(0)  // offsets<2: 0f>
                mov r1.w, -r2.w  // offsets<5:Inf:[-1.#INFf,-2.32831e-010f]>
                mov r3.z, -r2.w  // offsets<6:Inf:[-1.#INFf,-2.32831e-010f]>
                mov r1.y, -r2.w  // offsets<12:Inf:[-1.#INFf,-2.32831e-010f]>
                mov r1.x, l(0)  // offsets<14: 0f>
                
                #line 114
                mov r2.x, r2.x  // depth<0:NaN:Inf>
                mov r2.w, l(0)  // shadowFactor<0:Inf>
                mov r3.w, l(0)  // i<0>
                loop 
                  ilt r4.x, r3.w, l(9)
                  breakc_z r4.x
                  mov r4.x, r3.w
                  ieq r5.xyzw, r4.xxxx, l(0, 1, 2, 3)
                  ieq r4.xyzw, r4.xxxx, l(5, 6, 7, 8)
                  and r5.x, r5.x, l(0x3f800000)
                  and r5.y, r5.y, l(0x3f800000)
                  and r5.z, r5.z, l(0x3f800000)
                  and r5.w, r5.w, l(0x3f800000)
                  and r4.xyzw, r4.xyzw, l(0x3f800000, 0x3f800000, 0x3f800000, 0x3f800000)
                  mul r6.xy, r3.zzzz, r5.xxxx
                  add r6.xy, r6.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
                  mul r5.xy, r3.xyxx, r5.yyyy
                  add r5.xy, r6.xyxx, r5.xyxx
                  mul r6.xy, r1.zwzz, r5.zzzz
                  add r5.xy, r5.xyxx, r6.xyxx
                  mul r6.x, r3.z, r5.w
                  mov r6.y, l(0)
                  add r5.xy, r5.xyxx, r6.xyxx
                  add r5.xy, r5.xyxx, l(0.000000, 0.000000, 0.000000, 0.000000)
                  mul r6.x, r1.z, r4.x
                  mov r6.y, l(0)
                  add r5.xy, r5.xyxx, r6.xyxx
                  mul r4.xy, r1.yzyy, r4.yyyy
                  add r4.xy, r5.xyxx, r4.xyxx
                  mul r5.xy, r1.xzxx, r4.zzzz
                  add r4.xy, r4.xyxx, r5.xyxx
                  mul r4.zw, r1.zzzz, r4.wwww
                  add r4.xy, r4.xyxx, r4.zwzz
                  add r4.xy, r2.yzyy, r4.xyxx
                  sample_indexable(texture2d)(float,float,float,float) r4.x, r4.xyxx, t1.xyzw, s0
                  add r4.x, r4.x, cb0[24].x  // nearestDepth<0:Inf>
                  lt r4.x, r4.x, r2.x
                  and r4.x, r4.x, l(0x3f800000)
                  add r2.w, r2.w, r4.x  // shadowFactor<0:Inf>
                
                #line 115
                  iadd r3.w, r3.w, l(1)  // i<0>
                endloop 
                
                #line 122
                div r1.x, r2.w, l(9.000000)  // shadowFactor<0:Inf>
                
                #line 125
                mov r2.xyzw, -r0.xyzw
                add r2.xyzw, r2.xyzw, cb0[23].xyzw
                mul r1.xyzw, r1.xxxx, r2.xyzw
                add o0.xyzw, r0.xyzw, r1.xyzw  // pixel<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                ret 
                // Approximately 76 instruction slots used
                            
            };
        }

    }

}

