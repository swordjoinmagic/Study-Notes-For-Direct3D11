//
// FX Version: fx_5_0
//
// 2 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 model;                     // Offset:    0, size:   64
    float4x4 vpMatrix;                  // Offset:   64, size:   64
    float3  viewPos;                    // Offset:  128, size:   12
    float2  Size;                       // Offset:  144, size:    8
}

cbuffer cbFixed
{
    float2  gTexC[4] = { 0, 1, 0, 0, 1, 1, 1, 0 };// Offset:    0, size:   56
}

//
// 2 local object(s)
//
SamplerState SamplerState1
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
Texture2D MainTex;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 model;                    // Offset:    0 Size:    64
                //   float4x4 vpMatrix;                 // Offset:   64 Size:    64 [unused]
                //   float3 viewPos;                    // Offset:  128 Size:    12 [unused]
                //   float2 Size;                       // Offset:  144 Size:     8 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[3], immediateIndexed
                dcl_input v0.xyz
                dcl_output o0.xyz
                dcl_temps 2
                
                #line 46 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample8 GeometryShader\billboard.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // o<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // o<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // o<2:NaN:Inf>
                mov o0.xyz, r1.xyzx  // vert<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                ret 
                // Approximately 7 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 model;                    // Offset:    0 Size:    64 [unused]
                //   float4x4 vpMatrix;                 // Offset:   64 Size:    64
                //   float3 viewPos;                    // Offset:  128 Size:    12
                //   float2 Size;                       // Offset:  144 Size:     8
                //
                // }
                //
                // cbuffer cbFixed
                // {
                //
                //   float2 gTexC[4];                   // Offset:    0 Size:    56
                //      = 0x00000000 0x3f800000 0x00000000 0x00000000 
                //        0x00000000 0x00000000 0x00000000 0x00000000 
                //        0x3f800000 0x3f800000 0x00000000 0x00000000 
                //        0x3f800000 0x00000000 
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbFixed                           cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // SV_PrimitiveID           0    N/A   primID   PRIMID   uint    YES
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:SV_Position           0   xyzw        0      POS  float   xyzw
                // m0:TEXCOORD              0   xy          1     NONE  float   xy  
                // m0:SV_PrimitiveID        0   x           2   PRIMID   uint   x   
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[10], immediateIndexed
                dcl_constantbuffer cb1[4], immediateIndexed
                dcl_input v[1][0].xyz
                dcl_input vPrim
                dcl_temps 5
                dcl_inputprimitive point 
                dcl_stream m0
                dcl_outputtopology trianglestrip 
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_output_sgv o2.x, primitive_id
                dcl_maxout 4
                
                #line 58 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample8 GeometryShader\billboard.fx"
                mov r0.xy, -v[0][0].zxzz
                add r0.yz, r0.xxyx, cb0[8].zzxz  // look<2:Inf,0:Inf>
                mov r0.x, l(0)  // look<1: 0f>
                dp3 r0.w, r0.xyzx, r0.xyzx
                rsq r0.w, r0.w
                mul r0.xyz, r0.wwww, r0.xyzx  // look<1: 0f,2:NaN:Inf,0:NaN:Inf>
                mul r1.xyz, r0.yzxy, l(1.000000, 0.000000, 0.000000, 0.000000)
                mul r0.xyz, r0.xyzx, l(0.000000, 0.000000, 1.000000, 0.000000)
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // right<0:NaN:Inf,1: 0f,2:NaN:Inf>
                mul r0.w, cb0[9].x, l(0.500000)  // halfWidth<0:[-1.70141e+038f,1.70141e+038f]>
                mul r1.x, cb0[9].y, l(0.500000)  // halfHeight<0:[-1.70141e+038f,1.70141e+038f]>
                
                #line 69
                mul r0.xyz, r0.xyzx, r0.wwww
                add r1.yzw, r0.xxyz, v[0][0].xxyz
                mul r2.xyz, r1.xxxx, l(0.000000, 1.000000, 0.000000, 0.000000)
                mov r3.xyz, -r2.xyzx
                add r4.xyz, r1.yzwy, r3.xyzx
                add r1.xyz, r1.yzwy, r2.xyzx
                mov r0.xyz, -r0.xyzx
                add r0.xyz, r0.xyzx, v[0][0].xyzx
                add r3.xyz, r3.xyzx, r0.xyzx
                add r0.xyz, r2.xyzx, r0.xyzx
                
                #line 80
                mov r4.w, l(1.000000)
                dp4 r2.x, r4.xyzw, cb0[4].xyzw  // o<0:NaN:Inf>
                dp4 r2.y, r4.xyzw, cb0[5].xyzw  // o<1:NaN:Inf>
                dp4 r2.z, r4.xyzw, cb0[6].xyzw  // o<2:NaN:Inf>
                dp4 r2.w, r4.xyzw, cb0[7].xyzw  // o<3:NaN:Inf>
                mov r4.xy, cb1[0].xyxx  // o<4,5>
                mov r4.z, vPrim  // o<6>
                mov o0.xyzw, r2.xyzw  // triStream<0,0,0,0>
                mov o1.xy, r4.xyxx  // triStream<0,0>
                mov o2.x, r4.z  // triStream<0>
                emit_stream m0
                
                #line 80
                mov r1.w, l(1.000000)
                dp4 r2.x, r1.xyzw, cb0[4].xyzw  // o<0:NaN:Inf>
                dp4 r2.y, r1.xyzw, cb0[5].xyzw  // o<1:NaN:Inf>
                dp4 r2.z, r1.xyzw, cb0[6].xyzw  // o<2:NaN:Inf>
                dp4 r2.w, r1.xyzw, cb0[7].xyzw  // o<3:NaN:Inf>
                mov r1.xy, cb1[1].xyxx  // o<4,5>
                mov o0.xyzw, r2.xyzw  // triStream<0,0,0,0>
                mov o1.xy, r1.xyxx  // triStream<0,0>
                mov o2.x, r4.z  // triStream<0>
                emit_stream m0
                
                #line 80
                mov r3.w, l(1.000000)
                dp4 r1.x, r3.xyzw, cb0[4].xyzw  // o<0:NaN:Inf>
                dp4 r1.y, r3.xyzw, cb0[5].xyzw  // o<1:NaN:Inf>
                dp4 r1.z, r3.xyzw, cb0[6].xyzw  // o<2:NaN:Inf>
                dp4 r1.w, r3.xyzw, cb0[7].xyzw  // o<3:NaN:Inf>
                mov r2.xy, cb1[2].xyxx  // o<4,5>
                mov o0.xyzw, r1.xyzw  // triStream<0,0,0,0>
                mov o1.xy, r2.xyxx  // triStream<0,0>
                mov o2.x, r4.z  // triStream<0>
                emit_stream m0
                
                #line 80
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw  // o<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[5].xyzw  // o<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[6].xyzw  // o<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[7].xyzw  // o<3:NaN:Inf>
                mov r0.xy, cb1[3].xyxx  // o<4,5>
                mov o0.xyzw, r1.xyzw  // triStream<0,0,0,0>
                mov o1.xy, r0.xyxx  // triStream<0,0>
                mov o2.x, r4.z  // triStream<0>
                emit_stream m0
                
                #line 54
                ret 
                // Approximately 64 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // SamplerState1                     sampler      NA          NA    0        1
                // MainTex                           texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // SV_PrimitiveID           0   x           2   PRIMID   uint       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_output o0.xyzw
                dcl_temps 1
                
                #line 89 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample8 GeometryShader\billboard.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v1.xyxx, t0.xyzw, s0  // texColor<0:Inf,1:Inf,2:Inf,3:Inf>
                add r0.w, r0.w, l(-0.050000)
                lt r0.w, r0.w, l(0.000000)
                and r0.w, r0.w, l(-1)
                discard r0.w
                mov o0.w, l(1.000000)  // pixelShader<3: 1f>
                mov o0.xyz, r0.xyzx  // pixelShader<0:Inf,1:Inf,2:Inf>
                ret 
                // Approximately 8 instruction slots used
                            
            };
        }

    }

}

