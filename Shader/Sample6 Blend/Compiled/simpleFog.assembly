//
// FX Version: fx_5_0
//
// 1 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 mvp;                       // Offset:    0, size:   64
    float4x4 model;                     // Offset:   64, size:   64
    float3  fogColor;                   // Offset:  128, size:   12
    float   fogStart;                   // Offset:  140, size:    4
    float   fogRange;                   // Offset:  144, size:    4
    float3  viewPos;                    // Offset:  148, size:   12
}

//
// 2 local object(s)
//
SamplerState sampleState
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(CLAMP /* 3 */);
    AddressV = uint(CLAMP /* 3 */);
};
Texture2D MainTex;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 1 technique(s)
    //
    technique11
    {
        pass P0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 mvp;                      // Offset:    0 Size:    64
                //   float4x4 model;                    // Offset:   64 Size:    64
                //   float3 fogColor;                   // Offset:  128 Size:    12 [unused]
                //   float fogStart;                    // Offset:  140 Size:     4 [unused]
                //   float fogRange;                    // Offset:  144 Size:     4 [unused]
                //   float3 viewPos;                    // Offset:  148 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float   xyzw
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // POSITION                 0   xyz         2     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[7], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xy
                dcl_output o2.xyz
                dcl_temps 4
                
                #line 36 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample6 Blend\simpleFog.fx"
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw  // o<0:NaN:Inf>
                dp4 r1.y, r0.xyzw, cb0[1].xyzw  // o<1:NaN:Inf>
                dp4 r1.z, r0.xyzw, cb0[2].xyzw  // o<2:NaN:Inf>
                dp4 r1.w, r0.xyzw, cb0[3].xyzw  // o<3:NaN:Inf>
                mov r2.xy, v1.xyxx  // o<4,5>
                dp4 r3.x, r0.xyzw, cb0[4].xyzw  // o<6:NaN:Inf>
                dp4 r3.y, r0.xyzw, cb0[5].xyzw  // o<7:NaN:Inf>
                dp4 r3.z, r0.xyzw, cb0[6].xyzw  // o<8:NaN:Inf>
                mov o0.xyzw, r1.xyzw  // vert<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf,3:NaN:Inf>
                mov o2.xyz, r3.xyzx  // vert<6:NaN:Inf,7:NaN:Inf,8:NaN:Inf>
                mov o1.xy, r2.xyxx  // vert<4,5>
                ret 
                // Approximately 14 instruction slots used
                            
            };
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 mvp;                      // Offset:    0 Size:    64 [unused]
                //   float4x4 model;                    // Offset:   64 Size:    64 [unused]
                //   float3 fogColor;                   // Offset:  128 Size:    12
                //   float fogStart;                    // Offset:  140 Size:     4
                //   float fogRange;                    // Offset:  144 Size:     4
                //   float3 viewPos;                    // Offset:  148 Size:    12
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // sampleState                       sampler      NA          NA    0        1
                // MainTex                           texture  float4          2d    0        1
                // cbPerObject                       cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Position              0   xyzw        0      POS  float       
                // TEXCOORD                 0   xy          1     NONE  float   xy  
                // POSITION                 0   xyz         2     NONE  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_TARGET                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[10], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.xy
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 2
                
                #line 44 "D:\CPPInstance\LearnDirectX\LeranDirect3D11\LeranDirect3D11_WithConsole\Shader\Sample6 Blend\simpleFog.fx"
                sample_indexable(texture2d)(float,float,float,float) r0.xyz, v1.xyxx, t0.xyzw, s0
                mov r0.xyz, r0.xyzx  // finalColor<0:Inf,1:Inf,2:Inf>
                
                #line 47
                mov r1.xyz, -cb0[9].yzwy
                add r1.xyz, r1.xyzx, v2.xyzx
                dp3 r0.w, r1.xyzx, r1.xyzx
                sqrt r0.w, r0.w  // dist<0:NaN:Inf>
                
                #line 50
                mov r1.x, -cb0[8].w
                add r0.w, r0.w, r1.x
                div r0.w, r0.w, cb0[9].x
                max r0.w, r0.w, l(0.000000)
                min r0.w, r0.w, l(1.000000)  // fogAmount<0:[0f,1f]>
                mov r1.xyz, -r0.xyzx
                add r1.xyz, r1.xyzx, cb0[8].xyzx
                mul r1.xyz, r0.wwww, r1.xyzx
                add r0.xyz, r0.xyzx, r1.xyzx  // finalColor<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.xyz, r0.xyzx  // frag<0:NaN:Inf,1:NaN:Inf,2:NaN:Inf>
                mov o0.w, l(1.000000)  // frag<3: 1f>
                ret 
                // Approximately 18 instruction slots used
                            
            };
        }

    }

}

